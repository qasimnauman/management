@page "/login"
@layout LoginLayout
@using System.ComponentModel.DataAnnotations



<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <div class="login-container">
        <div class="login-card">
            <div class="login-left">
                <img src="secure-login.svg" alt="Login Illustration" />
            </div>
            <div class="login-right">
                <h2>Welcome back! 👋</h2>
                <h3>Login to your account</h3>

                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="loginModel.Email" class="form-control" />
                    <ValidationMessage For="@(() => loginModel.Email)" />
                </div>

                <div class="form-group">
                    <label>Password</label>
                    <div class="password-container">
                        <InputText @bind-Value="loginModel.Password" class="form-control" type="@passwordType" />
                        <button type="button" class="eye-button" @onclick="TogglePassword">
                            <i class="@eyeIcon"></i>
                        </button>
                    </div>
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>

                <button class="login-button" type="submit">Login</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();

    private string passwordType = "password";
    private string eyeIcon = "fas fa-eye-slash";

    private void TogglePassword()
    {
        if (passwordType == "password")
        {
            passwordType = "text";
            eyeIcon = "fas fa-eye";
        }
        else
        {
            passwordType = "password";
            eyeIcon = "fas fa-eye-slash";
        }
    }

    private void HandleLogin()
    {
        // Handle login logic here
        Console.WriteLine($"Logging in with: {loginModel.Email}");
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email format")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; } = string.Empty;
    }
}


<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f5f5f5;
    }

    .login-card {
        display: flex;
        background: white;
        border-radius: 10px;
        padding: 30px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        max-width: 800px;
        width: 100%;
    }

    .login-left {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .login-left img {
            width: 80%;
        }

    .login-right {
        flex: 1;
        padding: 20px;
    }

    h2, h3 {
        margin: 0;
        padding-bottom: 10px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .password-container {
        display: flex;
        align-items: center;
    }

    .eye-button {
        background: none;
        border: none;
        cursor: pointer;
        margin-left: -30px;
    }

    .login-button {
        width: 100%;
        padding: 10px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        .login-button:hover {
            background-color: #0056b3;
        }

</style>
